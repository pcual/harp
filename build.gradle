apply plugin: 'java'

repositories {
  mavenCentral()
}

dependencies {
  compile 'org.codehaus.groovy:groovy:2.1.7'
  compile 'com.google.guava:guava:15.0'

  testCompile 'junit:junit:4.11'
}

compileJava {
  options.compilerArgs << "-Werror"
  options.compilerArgs << "-Xlint:all"
}

// This task runs a single integration test, i.e. it runs Harp from the command line on a test
// harp project.
//
// TODO: Add some verification that harp did the expected thing in execution.
task(integrationTestSimple, type: JavaExec) {
  main = 'harp.HarpMain'
  classpath = sourceSets.main.runtimeClasspath
  workingDir = "src/test/integration/simple"
  args = [ "run", "localTest", "run.harp:printDate" ]
}

task(integrationTestSimpleResource, type: JavaExec) {
  main = 'harp.HarpMain'
  classpath = sourceSets.main.runtimeClasspath
  workingDir = "src/test/integration/simple_with_resource"
  args = [ "run", "localTest", "run.harp:catFile" ]
}

task(integrationTestCustomResource, type: JavaExec) {
  main = 'harp.HarpMain'
  classpath = sourceSets.main.runtimeClasspath
  workingDir = "src/test/integration/custom_resource"
  args = [ "run", "localTest", "run.harp:sayHello" ]
}

task(integrationTestSimpleLinking, type: JavaExec) {
  main = 'harp.HarpMain'
  classpath = sourceSets.main.runtimeClasspath
  workingDir = "src/test/integration/local_linker_simple"
  args = [ "run", "localTest", "sub/run.harp:helloTest" ]
}

task allTests {

  dependsOn test

  def integrationTestTasks = tasks.matching {
    it.name.startsWith("integrationTest")
  }

  dependsOn integrationTestTasks
}

// For fiddling purposes, run Harp.
task(runHarp, type: JavaExec) {
  main = 'harp.HarpMain'
  classpath = sourceSets.main.runtimeClasspath
  args = [ "test", "src/test/integration/local_linker_simple/sub/run.harp" ]
}
